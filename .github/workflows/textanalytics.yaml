name: Textanalytics Function
on:
  push:
    branches: [features/github-actions]
    paths:
      - .github/workflows/textanalytics.yaml
      - day4/apps/nodejs/textanalytics/*
      - day4/apps/infrastructure/templates/scm-textanalytics-nodejs-common.json
      - day4/apps/infrastructure/templates/scm-textanalytics-nodejs-infra.json

env:
  RESOURCE_GROUP_NAME: SCM-GITHUB-ACTION-COMMON-RG
  APPLICATION_INSIGHTS_NAME: scm-contacts-insights
  SERVICE_BUS_NAMESPACE: scm-shared-service-bus
  STORAGE_ACCOUNT_NAME: scmtextanalyticsstorage
  COGNITIVE_SERVICE_NAME: contactstextanalytics
  FUNCTION_APP_NAME: textanalyticsfunction
  COSMOS_DB_ACCOUNT_NAME: scm-contacts-cosmos-db

jobs:
  extract-arm-template:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - name: Upload the ARM Template as build artifact
        uses: actions/upload-artifact@v2
        with:
          name: template
          path: day4/apps/infrastructure/templates/scm-textanalytics.json
          if-no-files-found: error
          retention-days: 90

  deploy-template:
    runs-on: ubuntu-latest
    needs: extract-arm-template
    steps:
      - name: Download the arm template
        uses: actions/download-artifact@v2
        with:
          name: template
      - uses: azure/login@v1
        with:
          creds: ${{ secrets.AZURE_CREDENTIALS }}
      - name: Deploy Azure Resource Manager (ARM) Template
        uses: Azure/arm-deploy@v1
        with:
          subscriptionId: ${{ secrets.SUBSCRIPTION_ID }}
          resourceGroupName: ${{ env.RESOURCE_GROUP_NAME }}
          template: scm-textanalytics.json
          deploymentMode: Incremental
          parameters: >
            functionAppName=${{ env.FUNCTION_APP_NAME }}
            storageAccountName=${{ env.STORAGE_ACCOUNT_NAME }}
            applicationInsightsName=${{ env.APPLICATION_INSIGHTS_NAME }}
            cosmosDbAccount=${{ env.COSMOS_DB_ACCOUNT_NAME }}
            serviceBusNamespaceName=${{ env.SERVICE_BUS_NAMESPACE }}
            commonResGroup=${{ env.RESOURCE_GROUP_NAME }}
            taname=${{ env.COGNITIVE_SERVICE_NAME }}

  build-and-deploy-api:
    runs-on: ubuntu-latest
    needs:
      - deploy-template
    steps:
      - uses: actions/checkout@v2
      - uses: actions/cache@v2
        name: Cache npm dependencies to speed up deployment
        with:
          path: ~/.npm
          key: ${{ runner.os }}-node-${{ hashFiles('day4/apps/nodejs/textanalytics/package-lock.json') }}
          restore-keys: |
            ${{ runner.os }}-node-
      - uses: actions/setup-node@v2
        with:
          node-version: '12'
      - name: npm install, build, and test
        working-directory: day4/apps/nodejs/textanalytics
        run: | # The following lines are joined by a newline (\n) character
          npm install
          npm run build --if-present
          npm run test --if-present
      - uses: azure/login@v1
        with:
          creds: ${{ secrets.AZURE_CREDENTIALS }}
      - name: Azure WebApp
        uses: azure/functions-action@v1
        with:
          app-name: ${{ env.FUNCTION_APP_NAME }}
          package: day4/apps/nodejs/textanalytics
