name: Contacts API
on:
  push:
    branches: [ features/github-actions ]
  workflow_dispatch:
env:
  resourceGroupName: SCM-GITHUB-ACTION-COMMON-RG
  applicationInsightsName: scm-contacts-insights
  serviceBusNamespaceName: scm-shared-service-bus
  AZURE_WEBAPP_NAME: scm-contacts-api-github
jobs:
  extract-arm-template:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - name: Upload the ARM Template as build artifact
        uses: actions/upload-artifact@v2
        with:
          name: template
          path: day4/apps/infrastructure/templates/scm-api-dotnetcore.json
          if-no-files-found: error
          retention-days: 90
  build:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - uses: actions/setup-dotnet@v1
        with:
          dotnet-version: '3.1.x' # SDK Version to use; x will use the latest version of the 3.1 channel
      - run: dotnet publish --configuration Release --output build/
        working-directory: day4/apps/dotnetcore/Scm
      - name: Upload the ARM Template as build artifact
        uses: actions/upload-artifact@v2
        with:
          name: build
          path: day4/apps/dotnetcore/Scm/build
          if-no-files-found: error
          retention-days: 90
  deploy-arm-template:
    runs-on: ubuntu-latest
    needs: [extract-arm-template]
    steps:
      - name: Download the arm template
        uses: actions/download-artifact@v2
        with:
          name: template
      - uses: azure/login@v1
        with:
          creds: ${{ secrets.AZURE_CREDENTIALS }}
      - name: Deploy Azure Resource Manager (ARM) Template
        uses: Azure/arm-deploy@v1
        with:
          subscriptionId: ${{ secrets.SUBSCRIPTION_ID }}
          resourceGroupName: ${{ env.resourceGroupName }}
          template: scm-api-dotnetcore.json
          deploymentMode: Incremental
          parameters: applicationInsightsName=${{ env.applicationInsightsName }} serviceBusNamespaceName=${{ env.serviceBusNamespaceName }}
  deploy-webapp:
    runs-on: ubuntu-latest
    needs: [deploy-arm-template]
    steps:
      - name: Download the arm template
        uses: actions/download-artifact@v2
        with:
          name: build
      - uses: azure/login@v1
        with:
          creds: ${{ secrets.AZURE_CREDENTIALS }}
      - name: Azure WebApp
        uses: Azure/webapps-deploy@v2
        with:
          app-name: ${{ env.AZURE_WEBAPP_NAME }}
